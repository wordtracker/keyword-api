---
openapi: 3.0.2
info:
  title: Wordtracker Keyword API
  description: "*First release: 09.04.19*\n## Introduction\n\n### Raw Google, YouTube,\
    \ Amazon, eBay keyword search data\nThe `Wordtracker Keyword API 2.0` provides\
    \ keywords and associated search volumes for a range of sources, including Google,\
    \ YouTube, Amazon and eBay. This data comes from a ~18 million global anonymized\
    \ panel supplied by [DDMR](https://ddmr.com) which makes it a very reliable, clean\
    \ source of keywords (2.06 billion unique keywords from 5.5 billion searches).\
    \ To use the API you will first need to [sign up here](https://wordtracker.3scale.net).\
    \ For pricing and more general information, please take a [look here](https://www.wordtracker.com/api).\
    \ \n\nPlease note that this is v2 of the Wordtracker Keyword API and currently\
    \ includes keywords and search volumes from:\n- Google\n- YouTube\n- Amazon\n\
    - eBay\n \nFor the following 30 countries:\n- Global (all countries merged together)\n\
    - United States (US), United Kingdom (GB), Ukraine (UA)\n- Indonesia (ID), India\
    \ (IN), Turkey (TR), Thailand (TH)\n- Pakistan (PK), Canada (CA), Germany (DE),\
    \ Bangladesh (BD)\n- Brazil (BR), Mexico (MX), Australia (AU), Spain (ES)\n- France\
    \ (FR), Netherlands (NL), Italy (IT), New Zealand (NZ), \n- South Africa (ZA),\
    \ Ireland (IE), Sweden (SE), Poland (PL), \n- Japan (JP), Argentina (AR), Republic\
    \ of Korea (KR), \n- Greece (GR), Romania (RO), Isarel (IL).\n\n\n### Get going\
    \ in 10 minutes!\nFirst [register for an API account](https://wordtracker.3scale.net)\
    \ (30 day free trial available). You can then find the production ready Wordtracker\
    \ Keyword API 2.0 server at: https://api.lc.wordtracker.com\n\nPlease make sure\
    \ you add the `app_id` and `app_key` as authorisation.\nHere's an example [REST\
    \ url](https://api.lc.wordtracker.com/v2/search?engine=google&country=us&seeds=dog&limit=10&type=broad&app_id=your_app_id&app_key=your_key)\
    \ to query the /search method. \n\nPlease note: If the above url does not work,\
    \ please check the version e.g. /v2, /v2.1 etc. You can also see the latest urls\
    \ at https://api.lc.wordtracker.com.\n\n\n### Historical search volumes: 12 month\
    \ rolling window\nPlease note that we use a 12 month rolling window. This means\
    \ that as a new month begins, the last 12 months of data is re-processed up until\
    \ the close of the previous month. E.g. if today is May 1st then a new 12 month\
    \ rolling window is created from May 2018 - Apr 2019. That also means you will\
    \ see search volumes and # panelists for each of those last 12 months as well\
    \ as a total volume & average volume for all months. \n\n### Please choose from\
    \ these options\n* [Register for an API account (30 day free trial available)](https://wordtracker.3scale.net)\n\
    * [API pricing](http://www.wordtracker.com/api)\n* [Try the data out in the Wordtracker\
    \ keyword tool](http://www.wordtracker.com)"
  termsOfService: https://www.wordtracker.com/terms
  contact:
    name: Wordtracker API Team
    url: http://www.wordtracker.com
    email: developers@wordtracker.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.0
  x-date: 2019-03-07
  x-logo:
    url: https://s3.amazonaws.com/wordtracker-front-end-assets/images/wordtracker-logo-transparent.png
    backgroundColor: '#5195E9'
servers:
- url: https://api.lc.wordtracker.com/v1
  description: Production server
paths:
  /search:
    get:
      summary: /search (raw keyword suggestions for engine/country)
      description: |
        Search the Wordtracker Keyword API for raw keyword suggestions and monthly volumes using one or more seed terms.
      operationId: search
      responses:
        200:
          description: Monthly search volume for one or more specific seed terms for
            an engine and a country e.g. Google US. Also includes panelists per month,
            total volume, average volume for last 12 months, total months seen and
            the query parameters.
          content:
            application/json:
              schema:
                type: array
                items: {}
              examples:
                firefox:
                  value: |-
                    {
                        "results": [
                            {
                                "keyword": "firefox",
                                "total_volume_for_last_12_months": 25258,
                                "avg_volume_for_last_12_months": 2105,
                                "volume_by_month": [
                                    {
                                        "volume": 2336,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "volume": 2486,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "volume": 2410,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                 ],
                                "panelist_ids_by_month": [
                                    {
                                        "ids": 1440,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "ids": 1384,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "ids": 1263,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                               ],
                                "total_months_seen": 12
                            },
                            {
                                "keyword": "mozilla firefox",
                                "total_volume_for_last_12_months": 4013,
                                "avg_volume_for_last_12_months": 334,
                                "volume_by_month": [
                                    {
                                        "volume": 476,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "volume": 424,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "volume": 373,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "panelist_ids_by_month": [
                                    {
                                        "ids": 296,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "ids": 233,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "ids": 198,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                "total_months_seen": 12
                            },
                        ],
                        "params": {
                            "engine": "google",
                            "country": "us",
                            "seeds": [
                                "firefox"
                            ],
                            "limit": 10,
                            "type": "broad",
                            "sort": "total"
                        }
                    }
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
    parameters:
    - $ref: '#/components/parameters/seeds'
    - $ref: '#/components/parameters/engine'
    - $ref: '#/components/parameters/country'
    - $ref: '#/components/parameters/type'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/limit'
  /fetch:
    get:
      summary: /fetch (exact search volume for multiple seed terms)
      description: Whereas /search takes one or more seeds terms and returns up to
        2000 keyword suggestions, /fetch is more specific. This method allows you
        to enter up to 500 seeds and retrieve the search volume (and panelist volumes)
        for each of those seeds specifically.
      operationId: fetch
      responses:
        200:
          description: |-
            Monthly search volume for one or more specific seed terms for an engine and a country
             e.g. Google US. Also includes panelists per month, total volume, average volume for
             last 12 months, total months seen and the query parameters.
          content:
            application/json:
              examples:
                firefox:
                  value: |-
                    {
                        "results": [
                            {
                                "keyword": "hello world",
                                "total_volume_for_last_12_months": 984,
                                "avg_volume_for_last_12_months": 82,
                                "volume_by_month": [
                                    {
                                        "volume": 93,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "volume": 89,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "volume": 113,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "panelist_ids_by_month": [
                                    {
                                        "ids": 59,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "ids": 49,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "ids": 58,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "total_months_seen": 12
                            }
                        ],
                        "params": {
                            "engine": "google",
                            "country": "us",
                            "seeds": [
                                "hello world"
                            ],
                            "limit": null,
                            "type": "exact",
                            "sort": "total"
                        }
                    }
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
    parameters:
    - $ref: '#/components/parameters/seeds'
    - $ref: '#/components/parameters/engine'
    - $ref: '#/components/parameters/country'
    - $ref: '#/components/parameters/sort'
  /top:
    get:
      summary: /top (keywords for an engine/country)
      description: Fetches the top keywords (max 2000) for an engine and a country
        e.g. Google US.
      operationId: top
      responses:
        200:
          description: Top keywords for an engine and a country e.g. Google US for
            each month. Also includes panelists per month, total volume, average volume
            for last 12 months, total months seen and the query parameters.
          content:
            application/json:
              examples:
                firefox:
                  value: |-
                    {
                        "results": [
                            {
                                "keyword": "youtube",
                                "total_volume_for_last_12_months": 1381715,
                                "avg_volume_for_last_12_months": 115143,
                                "volume_by_month": [
                                    {
                                        "volume": 133346,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "volume": 124478,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "volume": 121125,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "panelist_ids_by_month": [
                                    {
                                        "ids": 49189,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "ids": 42654,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "ids": 38276,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "total_months_seen": 12
                            },
                            {
                                "keyword": "gmail",
                                "total_volume_for_last_12_months": 933757,
                                "avg_volume_for_last_12_months": 77813,
                                "volume_by_month": [
                                    {
                                        "volume": 89668,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "volume": 85709,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "volume": 84670,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "panelist_ids_by_month": [
                                    {
                                        "ids": 29843,
                                        "year": "2018",
                                        "month": "03"
                                    },
                                    {
                                        "ids": 25751,
                                        "year": "2018",
                                        "month": "04"
                                    },
                                    {
                                        "ids": 23864,
                                        "year": "2018",
                                        "month": "05"
                                    },
                                    ...
                                ],
                                "total_months_seen": 12
                            },
                        ],
                        "params": {
                            "engine": "google",
                            "country": "us",
                            "seeds": null,
                            "limit": 10,
                            "type": null,
                            "sort": "total"
                        }
                    }
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
    parameters:
    - $ref: '#/components/parameters/engine'
    - $ref: '#/components/parameters/country'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/limit'
  /count:
    get:
      summary: /count (total keywords available for engine/country)
      description: Counts the total number of keywords matching specific parameters.
        The /search API is limited to a maximum of 2000 search results per query.
        The /count method tells you how many keywords there are in total.
      operationId: count
      responses:
        200:
          description: Total number of keywords matching the parameters e.g. specific
            engine and country.
          content:
            application/json:
              examples:
                firefox:
                  value: |-
                    {
                        "count": 1237,
                        "engine": "google",
                        "country": "us",
                        "seeds": [
                            "hello world"
                        ],
                        "type": "broad"
                    }
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
    parameters:
    - $ref: '#/components/parameters/seeds'
    - $ref: '#/components/parameters/engine'
    - $ref: '#/components/parameters/country'
    - $ref: '#/components/parameters/type'
  /stats:
    get:
      summary: /stats (for each engine/country)
      description: Returns statistics about the whole dataset e.g. total number of
        keywords.
      operationId: stats
      responses:
        200:
          description: All the statistics about the whole dataset e.g. total number
            of keywords. Please note that these statistics will vary based on the
            engine & country specified in the parameters.
          content:
            application/json:
              examples:
                result:
                  value: |-
                    {
                        "count": 113253428,
                        "engine": "google",
                        "country": "us"
                    }
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
    parameters:
    - $ref: '#/components/parameters/engine'
    - $ref: '#/components/parameters/country'
  /periods:
    get:
      summary: /periods (last 12 months as a list)
      description: Get all the available time periods for the keyword data, usually
        the last 12 months.
      operationId: periods
      responses:
        200:
          description: All the available time periods for the keyword data, usually
            the last 12 months.
          content:
            application/json:
              examples:
                result:
                  value: |-
                    [
                        "2018_03",
                        "2018_04",
                        "2018_05",
                        "2018_06",
                        "2018_07",
                        "2018_08",
                        "2018_09",
                        "2018_10",
                        "2018_11",
                        "2018_12",
                        "2019_01",
                        "2019_02"
                    ]
        401:
          $ref: '#/components/responses/AccessForbidden'
        404:
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Error:
      type: object
      properties:
        status:
          description: The HTTP status code.
          maximum: 600
          minimum: 100
          type: integer
        error:
          type: string
        type:
          description: A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)]
            that identifies the problem type. It should provide human-readable documentation
            for the problem type. When this member is not present, its value is assumed
            to be "about:blank".
          type: string
        title:
          description: A short, human-readable summary of the problem type. It SHOULD
            NOT change from occurrence to occurrence of the problem, except for purposes
            of localization.
          type: string
  responses:
    AccessForbidden:
      description: Access forbidden, invalid API key was used
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    seeds:
      name: seeds
      in: query
      description: |-
        One or more strings (max 100). If entering a single seed then simply specify seeds=dog and if multiple then please use a list format e.g. seeds=[''dog'',''dog training''].
        Think of `seeds` as one or more of your starter ideas to get going with e.g. 'chocolate' or 'dog training'. This is a separate concept from keywords which are returned in the results and which show exactly what people are typing into the search boxes of the engines like Google. With some analysis some of these results will become your key words aka `keywords`.
      required: true
      schema:
        type: array
        items: {}
    engine:
      name: engine
      in: query
      description: 'The engine that you want keyword suggestions and monthly volumes
        for. Default: `google`.'
      required: true
      schema:
        enum:
        - google
        - youtube
        - amazon
        - ebay
    country:
      name: country
      in: query
      description: "Specifies the territory to search within. Two letter ISO country\
        \ code or `global`. \nGlobal refers to ALL countries combined together. `us`\
        \ is United States and `gb` is Great Britain (United Kingdom). Default: `us`."
      required: true
      schema:
        enum:
        - global
        - us
        - gb
        - ua
        - id
        - in
        - tr
        - th
        - pk
        - ca
        - de
        - bd
        - br
        - mx
        - au
        - es
        - fr
        - nl
        - it
        - nz
        - za
        - ie
        - se
        - pl
        - jp
        - ar
        - kr
        - gr
        - ro
        - il
    type:
      name: type
      in: query
      description: |-
        ### Broadest

        Returns keyword suggestions for any seed words. E.g. a search for "dog training" returns suggestions for "dog" or "training" returns:
        * dog training
        * training dog
        * a dog is great
        * training day

        ---
        ### Broad

        Returns keyword suggestions for all words in any order. E.g. a search for "dog training" returns:
        * dog training
        * training your dog

        but not:

        * every dog has it's day


        ---
        ### Phrase

        Returns keyword suggestions for the exact phrase. E.g. a search for "dog training" returns:
        * dog training
        * I love dog training
        * dog training is fun


        ---
        ### Wildcard

        Allows you to use the * and ? characters to specify a wildcard. E.g. tr* returns:
        * dog training
        * training your dog
      required: true
      schema:
        enum:
        - broadest
        - broad
        - phrase
        - wildcard
    sort:
      name: sort
      in: query
      description: |-
        How you'd like to sort the results. Default 'Total'.
        Total: Total searches for the last 12 months which means total search volume for Jan + Feb + Mar etc.
        Avg: Average searches for the last 12 months which means the total search volume for all 12 months / 12.
      required: true
      schema:
        enum:
        - total
        - avg
    limit:
      name: limit
      in: query
      description: |-
        The maximum number of results which will be returned from the query.
        An integer between 1 and 2000 (max).
      required: true
      schema:
        type: integer
  securitySchemes:
    app_key:
      type: apiKey
      description: The Wordtracker Keyword API requires the app_id and app_key parameters
        in order to perform authorization. Authentication parameters must be present
        in the query string only, regardless of request method. To obtain these please
        sign up at https://wordtracker.3scale.net
      name: app_key
      in: header
    app_id:
      type: apiKey
      description: The Wordtracker Keyword API requires the app_id and app_key parameters
        in order to perform authorization. Authentication parameters must be present
        in the query string only, regardless of request method. To obtain these please
        sign up at https://wordtracker.3scale.net
      name: app_id
      in: header
security:
- app_key: []
  app_id: []
